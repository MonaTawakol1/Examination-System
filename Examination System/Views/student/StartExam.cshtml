@model IEnumerable<ExamQuestions>

@{
    ViewData["Title"] = "StartExam";
}

<h1>StartExam</h1>
<form id="examForm" method="post">


    @foreach (var item in Model)
    {

        <h3>@item.Question.QuestionBody</h3>
        <input type="hidden" name="ExamId" value="@item.ExamId" asp-for="@item.ExamId" />
        
        
            var shuffledChoices = item.Question.ChoicesList.OrderBy(x => Guid.NewGuid()).ToList();
        
        @for (var i = 0; i < shuffledChoices.Count; i++)
        {
            <input type="radio" value="@shuffledChoices[i].ChoiceId" name="ChoiceIds[@item.QuestionId]" />

            <label>@shuffledChoices[i].ChoiceBody</label>

            <input type="hidden" name="QuestionId" value="@item.Question.QuestionId" asp-for="@item.QuestionId" />

            <br />
        }


    }
    <input class="btn btn-success" type="submit" value="Submit" />
</form>



                            
<script>
    var endTime = new Date("@ViewBag.endDate").getTime();

    function checkExamTime() {
        var currentTime = new Date().getTime();
        if (currentTime >= endTime) {
            clearInterval(intervalId);
            document.getElementById("examForm").submit();
            window.location.href = "/Student/ExamEnded?examId=@ViewBag.examId";
        }
    }

    checkExamTime();

    var intervalId = setInterval(checkExamTime, 1000);
</script>
